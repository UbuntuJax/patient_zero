{"ast":null,"code":"var _jsxFileName = \"/home/team7lmao/repos/react_http/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./main.css\";\nimport \"./App.css\";\n// const images = require.context(\"../public\", true);\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [data, setData] = useState([]);\n  const [number, setNumber] = useState(\"\");\n  const [imageExists, setImageExists] = useState(true);\n  // todo: implement a function that reads the public folder and checks if the image exists\n  const staticFileList = [\"cheese\", \"cheese2\", \"cheese3\"]; // Define your static list of files here\n  const [idList, setIdList] = useState([]);\n  useEffect(() => {\n    // Function to continuously run handleClick until idList has 5 elements\n    const runHandleClick = () => {\n      if (idList.length < 6) {\n        handleClick();\n      }\n    };\n    runHandleClick(); // Call the function initially\n\n    return () => {\n      // Clean up to avoid memory leaks\n      // This will stop handleClick from running after the component unmounts\n      // Note: This return function runs when the component unmounts or idList changes\n    };\n    // eslint-disable-next-line\n  }, [idList]); // This effect depends on idList changes\n\n  // updated getPosts function\n  function handleClick() {\n    const breakfastData = {\n      name: \"cheese\",\n      colour: \"yellow\",\n      pricePerKg: 10.0,\n      imgUrl: \"www\"\n    };\n    fetch(\"https://localhost:7089/breakfasts\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(breakfastData)\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      } else {\n        response.json().then(json => setData(json));\n        console.log(\"Response: \", data.id);\n        if (data.id) {\n          setIdList([...idList, data.id]);\n          console.log(\"Id list: \", idList);\n        }\n      }\n      // Do something if the request is successful\n    }).catch(error => {\n      console.error(\"There was a problem with your fetch operation:\", error);\n    });\n  }\n  function getPosts() {\n    fetch(\"https://localhost:7089/breakfasts/a07898b0-fffa-439c-944e-216893ddec8e\").then(response => {\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n      return response.json();\n    }).then(json => {\n      setData(json);\n      if (json.name && staticFileList.includes(json.name)) {\n        setImageExists(true);\n      } else {\n        setImageExists(false);\n      }\n    }).catch(error => {\n      if (error.message === \"Failed to fetch\") {\n        console.error(\"Error: Failed to fetch. Is the server running?\");\n        // Handle the error, show a message to the user, etc.\n      } else {\n        console.error(\"There was a problem with your fetch operation:\", error);\n      }\n    });\n  }\n  function generateTable() {\n    console.log(\"here\");\n    return /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Id\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Colour\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.colour\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.pricePerKg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this);\n  }\n  const handleChange = event => {\n    // Ensure only numbers are entered\n    const value = event.target.value.replace(/\\D/g, \"\");\n    setNumber(value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"HTTP Request\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: handleClick,\n      children: \"Get all posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: getPosts,\n      children: \"Get posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: generateTable,\n      children: \"Make Table\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: number,\n      onChange: handleChange,\n      placeholder: \"Enter a number\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }, this), console.log(data.id), data.id && /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [\"cheese: \", data.name, \", colour: \", data.colour, \", Total Price: $\", data.pricePerKg * number / 1000, \", img:\", imageExists && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/\" + data.name + \".png\",\n        alt: \"xdd\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"TkPcJpck5QKReuOEi+XP4D645Hg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","data","setData","number","setNumber","imageExists","setImageExists","staticFileList","idList","setIdList","runHandleClick","length","handleClick","breakfastData","name","colour","pricePerKg","imgUrl","fetch","method","headers","body","JSON","stringify","then","response","ok","Error","json","console","log","id","catch","error","getPosts","includes","message","generateTable","children","fileName","_jsxFileName","lineNumber","columnNumber","handleChange","event","value","target","replace","className","onClick","type","onChange","placeholder","src","alt","_c","$RefreshReg$"],"sources":["/home/team7lmao/repos/react_http/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./main.css\";\nimport \"./App.css\";\n// const images = require.context(\"../public\", true);\n\nfunction App() {\n    const [data, setData] = useState([]);\n    const [number, setNumber] = useState(\"\");\n    const [imageExists, setImageExists] = useState(true);\n    // todo: implement a function that reads the public folder and checks if the image exists\n    const staticFileList = [\"cheese\", \"cheese2\", \"cheese3\"]; // Define your static list of files here\n    const [idList, setIdList] = useState([]);\n\n    useEffect(() => {\n        // Function to continuously run handleClick until idList has 5 elements\n        const runHandleClick = () => {\n            if (idList.length < 6) {\n                handleClick();\n            }\n        };\n\n        runHandleClick(); // Call the function initially\n\n        return () => {\n            // Clean up to avoid memory leaks\n            // This will stop handleClick from running after the component unmounts\n            // Note: This return function runs when the component unmounts or idList changes\n        };\n        // eslint-disable-next-line\n    }, [idList]); // This effect depends on idList changes\n\n    // updated getPosts function\n    function handleClick() {\n        const breakfastData = {\n            name: \"cheese\",\n            colour: \"yellow\",\n            pricePerKg: 10.0,\n            imgUrl: \"www\",\n        };\n        fetch(\"https://localhost:7089/breakfasts\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(breakfastData),\n        })\n            .then((response) => {\n                if (!response.ok) {\n                    throw new Error(\"Network response was not ok\");\n                } else {\n                    response.json().then((json) => setData(json));\n                    console.log(\"Response: \", data.id);\n\n                    if (data.id) {\n                        setIdList([...idList, data.id]);\n                        console.log(\"Id list: \", idList);\n                    }\n                }\n                // Do something if the request is successful\n            })\n            .catch((error) => {\n                console.error(\n                    \"There was a problem with your fetch operation:\",\n                    error\n                );\n            });\n    }\n\n    function getPosts() {\n        fetch(\n            \"https://localhost:7089/breakfasts/a07898b0-fffa-439c-944e-216893ddec8e\"\n        )\n            .then((response) => {\n                if (!response.ok) {\n                    throw new Error(\"Network response was not ok\");\n                }\n                return response.json();\n            })\n            .then((json) => {\n                setData(json);\n                if (json.name && staticFileList.includes(json.name)) {\n                    setImageExists(true);\n                } else {\n                    setImageExists(false);\n                }\n            })\n            .catch((error) => {\n                if (error.message === \"Failed to fetch\") {\n                    console.error(\n                        \"Error: Failed to fetch. Is the server running?\"\n                    );\n                    // Handle the error, show a message to the user, etc.\n                } else {\n                    console.error(\n                        \"There was a problem with your fetch operation:\",\n                        error\n                    );\n                }\n            });\n    }\n\n    function generateTable() {\n        console.log(\"here\");\n        return (\n            <table>\n                <thead>\n                    <tr>\n                        <th>Id</th>\n                        <th>Name</th>\n                        <th>Colour</th>\n                        <th>Price</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td>{data.id}</td>\n                        <td>{data.name}</td>\n                        <td>{data.colour}</td>\n                        <td>{data.pricePerKg}</td>\n                    </tr>\n                </tbody>\n            </table>\n        );\n    }\n\n    const handleChange = (event) => {\n        // Ensure only numbers are entered\n        const value = event.target.value.replace(/\\D/g, \"\");\n        setNumber(value);\n    };\n\n    return (\n        <div className=\"container\">\n            <h1 className=\"title\">HTTP Request</h1>\n            <button className=\"btn\" onClick={handleClick}>\n                Get all posts\n            </button>\n            <button className=\"btn\" onClick={getPosts}>\n                Get posts\n            </button>\n            <button className=\"btn\" onClick={generateTable}>\n                Make Table\n            </button>\n\n            <input\n                type=\"text\"\n                value={number}\n                onChange={handleChange}\n                placeholder=\"Enter a number\"\n            />\n            {console.log(data.id)}\n\n            {/* todo implement a condition that makes sense instead of data.id */}\n            {data.id && (\n                <ul>\n                    cheese: {data.name}, colour: {data.colour}, Total Price: $\n                    {(data.pricePerKg * number) / 1000}, img:\n                    {imageExists && (\n                        <img src={\"/\" + data.name + \".png\"} alt=\"xdd\"></img>\n                    )}\n                </ul>\n            )}\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}