{"ast":null,"code":"var _jsxFileName = \"/home/team7lmao/repos/patient_zero/frontend/src/components/BreakfastTable.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// import React, { useState } from \"react\";\n\n// const BreakfastTableRow = ({ formData, imageExists }) => {\n//     const [quantity, setQuantity] = useState(\"\");\n\n//     const handleInputChange = (event) => {\n//         const value = event.target.value.replace(/\\D/g, \"\");\n//         setQuantity(value);\n//     };\n\n//     return (\n//         <tr key={formData.id}>\n//             <td>{formData.name}</td>\n//             <td>{formData.colour}</td>\n//             <td>\n//                 <div>${formData.pricePerKg}</div>\n//                 <div>\n//                     <input\n//                         type=\"text\"\n//                         value={quantity}\n//                         onChange={handleInputChange}\n//                         placeholder=\"Enter a number (grams)\"\n//                     />\n//                 </div>\n//                 <div>Total Price: ${(formData.pricePerKg * quantity) / 1000}</div>\n//             </td>\n//             <td>\n//                 {imageExists && <img src={`/${formData.name}.png`} alt=\"file not found\" />}\n//             </td>\n//         </tr>\n//     );\n// };\n\n// const BreakfastTable = ({ formDataList }) => {\n//     const [makeTable, setMakeTable] = useState(false);\n//     const [imageExists, setImageExists] = useState(true);\n\n//     const generateTable = () => {\n//         setMakeTable(!makeTable);\n//     };\n\n//     return (\n//         <>\n//             <button className=\"btn\" onClick={generateTable}>\n//                 Make Table\n//             </button>\n//             {makeTable && (\n//                 <table>\n//                     <thead>\n//                         <tr>\n//                             <th>Name</th>\n//                             <th>Colour</th>\n//                             <th>Price Per Kg</th>\n//                             <th>Image</th>\n//                         </tr>\n//                     </thead>\n//                     <tbody>\n//                         {formDataList.map((formData) => (\n//                             <BreakfastTableRow\n//                                 key={formData.id}\n//                                 formData={formData}\n//                                 imageExists={imageExists}\n//                             />\n//                         ))}\n//                     </tbody>\n//                 </table>\n//             )}\n//         </>\n//     );\n// };\n\n// export default BreakfastTable;\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BreakfastTableRow = ({\n  formData\n}) => {\n  _s();\n  const [quantity, setQuantity] = useState(\"\");\n  const handleInputChange = event => {\n    const value = event.target.value.replace(/\\D/g, \"\");\n    setQuantity(value);\n  };\n  const getImageSource = () => {\n    try {\n      // Try to load the specific image\n      const imageSource = require(`./assets/images/${formData.name}.png`);\n      return imageSource;\n    } catch (error) {\n      // If the specific image is not found, load the default image\n      const defaultImageSource = require('./assets/images/defaultCheeseImage.png');\n      return defaultImageSource;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: formData.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: formData.colour\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"$\", formData.pricePerKg]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: quantity,\n          onChange: handleInputChange,\n          placeholder: \"Enter a number (grams)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Total Price: $\", formData.pricePerKg * quantity / 1000]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: getImageSource(),\n        alt: formData.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, formData.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n_s(BreakfastTableRow, \"iHItFWCNfn/6L4N+IZlssZ040dk=\");\n_c = BreakfastTableRow;\nconst BreakfastTable = ({\n  formDataList\n}) => {\n  _s2();\n  const [makeTable, setMakeTable] = useState(false);\n  const generateTable = () => {\n    setMakeTable(!makeTable);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: generateTable,\n      children: \"Make Table\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), makeTable && /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Colour\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Price Per Kg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: formDataList.map(formData => /*#__PURE__*/_jsxDEV(BreakfastTableRow, {\n          formData: formData\n        }, formData.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s2(BreakfastTable, \"LJRJNcOMFpJwSWp86kitKd0wJs0=\");\n_c2 = BreakfastTable;\nexport default BreakfastTable;\nvar _c, _c2;\n$RefreshReg$(_c, \"BreakfastTableRow\");\n$RefreshReg$(_c2, \"BreakfastTable\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","BreakfastTableRow","formData","_s","quantity","setQuantity","handleInputChange","event","value","target","replace","getImageSource","imageSource","require","name","error","defaultImageSource","children","fileName","_jsxFileName","lineNumber","columnNumber","colour","pricePerKg","type","onChange","placeholder","src","alt","id","_c","BreakfastTable","formDataList","_s2","makeTable","setMakeTable","generateTable","className","onClick","map","_c2","$RefreshReg$"],"sources":["/home/team7lmao/repos/patient_zero/frontend/src/components/BreakfastTable.jsx"],"sourcesContent":["// import React, { useState } from \"react\";\n\n// const BreakfastTableRow = ({ formData, imageExists }) => {\n//     const [quantity, setQuantity] = useState(\"\");\n\n//     const handleInputChange = (event) => {\n//         const value = event.target.value.replace(/\\D/g, \"\");\n//         setQuantity(value);\n//     };\n\n//     return (\n//         <tr key={formData.id}>\n//             <td>{formData.name}</td>\n//             <td>{formData.colour}</td>\n//             <td>\n//                 <div>${formData.pricePerKg}</div>\n//                 <div>\n//                     <input\n//                         type=\"text\"\n//                         value={quantity}\n//                         onChange={handleInputChange}\n//                         placeholder=\"Enter a number (grams)\"\n//                     />\n//                 </div>\n//                 <div>Total Price: ${(formData.pricePerKg * quantity) / 1000}</div>\n//             </td>\n//             <td>\n//                 {imageExists && <img src={`/${formData.name}.png`} alt=\"file not found\" />}\n//             </td>\n//         </tr>\n//     );\n// };\n\n// const BreakfastTable = ({ formDataList }) => {\n//     const [makeTable, setMakeTable] = useState(false);\n//     const [imageExists, setImageExists] = useState(true);\n\n//     const generateTable = () => {\n//         setMakeTable(!makeTable);\n//     };\n\n//     return (\n//         <>\n//             <button className=\"btn\" onClick={generateTable}>\n//                 Make Table\n//             </button>\n//             {makeTable && (\n//                 <table>\n//                     <thead>\n//                         <tr>\n//                             <th>Name</th>\n//                             <th>Colour</th>\n//                             <th>Price Per Kg</th>\n//                             <th>Image</th>\n//                         </tr>\n//                     </thead>\n//                     <tbody>\n//                         {formDataList.map((formData) => (\n//                             <BreakfastTableRow\n//                                 key={formData.id}\n//                                 formData={formData}\n//                                 imageExists={imageExists}\n//                             />\n//                         ))}\n//                     </tbody>\n//                 </table>\n//             )}\n//         </>\n//     );\n// };\n\n// export default BreakfastTable;\n\nimport React, { useState } from \"react\";\n\nconst BreakfastTableRow = ({ formData }) => {\n  const [quantity, setQuantity] = useState(\"\");\n  const handleInputChange = (event) => {\n    const value = event.target.value.replace(/\\D/g, \"\");\n    setQuantity(value);\n  };\n\n  const getImageSource = () => {\n    try {\n      // Try to load the specific image\n      const imageSource = require(`./assets/images/${formData.name}.png`);\n      return imageSource;\n    } catch (error) {\n      // If the specific image is not found, load the default image\n      const defaultImageSource = require('./assets/images/defaultCheeseImage.png');\n      return defaultImageSource;\n    }\n  };\n\n  return (\n    <tr key={formData.id}>\n      <td>{formData.name}</td>\n      <td>{formData.colour}</td>\n      <td>\n        <div>${formData.pricePerKg}</div>\n        <div>\n          <input\n            type=\"text\"\n            value={quantity}\n            onChange={handleInputChange}\n            placeholder=\"Enter a number (grams)\"\n          />\n        </div>\n        <div>Total Price: ${(formData.pricePerKg * quantity) / 1000}</div>\n      </td>\n      <td>\n        <img src={getImageSource()} alt={formData.name} />\n      </td>\n    </tr>\n  );\n};\n\nconst BreakfastTable = ({ formDataList }) => {\n  const [makeTable, setMakeTable] = useState(false);\n  const generateTable = () => {\n    setMakeTable(!makeTable);\n  };\n\n  return (\n    <>\n      <button className=\"btn\" onClick={generateTable}>\n        Make Table\n      </button>\n      {makeTable && (\n        <table>\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Colour</th>\n              <th>Price Per Kg</th>\n              <th>Image</th>\n            </tr>\n          </thead>\n          <tbody>\n            {formDataList.map((formData) => (\n              <BreakfastTableRow key={formData.id} formData={formData} />\n            ))}\n          </tbody>\n        </table>\n      )}\n    </>\n  );\n};\n\nexport default BreakfastTable;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}