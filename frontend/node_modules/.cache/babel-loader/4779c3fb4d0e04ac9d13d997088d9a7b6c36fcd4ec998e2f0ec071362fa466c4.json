{"ast":null,"code":"var _jsxFileName = \"/home/team7lmao/repos/react_http/src/App.js\";\n// import React, { useState } from \"react\";\n// import \"./main.css\";\n// // const images = require.context(\"../public\", true);\n\n// function App() {\n//     const [data, setData] = useState([]);\n//     const [number, setNumber] = useState(\"\");\n//     const [imageExists, setImageExists] = useState(true);\n//     const staticFileList = [\"cheese\", \"cheese2\", \"cheese3\"]; // Define your static list of files here\n\n//     function getPosts() {\n//         fetch(\n//             \"https://localhost:7089/breakfasts/a07898b0-fffa-439c-944e-216893ddec8e\"\n//         )\n//             .then((response) => response.json())\n//             .then((json) => setData(json));\n\n//         if (data.name && staticFileList.includes(data.name)) {\n//             // todo: checkImageExists(data.imgUrl);\n//             console.log(\"xdd\");\n//             setImageExists(true);\n//         } else {\n//             setImageExists(false);\n//             console.log(\"xdd2\");\n//         }\n//     }\n\n//     const handleChange = (event) => {\n//         // Ensure only numbers are entered\n//         const value = event.target.value.replace(/\\D/g, \"\");\n//         setNumber(value);\n//     };\n\n//     return (\n//         <div className=\"container\">\n//             <h1 className=\"title\">HTTP Request</h1>\n//             <button className=\"btn\" onClick={getPosts}>\n//                 Get posts\n//             </button>\n//             <input\n//                 type=\"text\"\n//                 value={number}\n//                 onChange={handleChange}\n//                 placeholder=\"Enter a number\"\n//             />\n//             {console.log(data.id)}\n\n//             {/* todo implement a condition that makes sense instead of data.id */}\n//             {data.id && (\n//                 <ul>\n//                     cheese: {data.name}, colour: {data.colour}, Total Price: $\n//                     {(data.pricePerKg * number) / 1000}, img:\n//                     {imageExists && (\n//                         <img src={\"/\" + data.name + \".png\"} alt=\"xdd\"></img>\n//                     )}\n//                 </ul>\n//             )}\n//         </div>\n//     );\n// }\n\n// export default App;\n\n// Filename - App.js\nimport \"./App.css\";\n\n// Example of a data array that\n// you might receive from an API\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst data = [{\n  name: \"Anom\",\n  age: 19,\n  gender: \"Male\"\n}, {\n  name: \"Megha\",\n  age: 19,\n  gender: \"Female\"\n}, {\n  name: \"Subham\",\n  age: 25,\n  gender: \"Male\"\n}];\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Age\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Gender\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), data.map((val, key) => {\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: val.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: val.age\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: val.gender\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 29\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["jsxDEV","_jsxDEV","data","name","age","gender","App","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","val","key","_c","$RefreshReg$"],"sources":["/home/team7lmao/repos/react_http/src/App.js"],"sourcesContent":["// import React, { useState } from \"react\";\n// import \"./main.css\";\n// // const images = require.context(\"../public\", true);\n\n// function App() {\n//     const [data, setData] = useState([]);\n//     const [number, setNumber] = useState(\"\");\n//     const [imageExists, setImageExists] = useState(true);\n//     const staticFileList = [\"cheese\", \"cheese2\", \"cheese3\"]; // Define your static list of files here\n\n//     function getPosts() {\n//         fetch(\n//             \"https://localhost:7089/breakfasts/a07898b0-fffa-439c-944e-216893ddec8e\"\n//         )\n//             .then((response) => response.json())\n//             .then((json) => setData(json));\n\n//         if (data.name && staticFileList.includes(data.name)) {\n//             // todo: checkImageExists(data.imgUrl);\n//             console.log(\"xdd\");\n//             setImageExists(true);\n//         } else {\n//             setImageExists(false);\n//             console.log(\"xdd2\");\n//         }\n//     }\n\n//     const handleChange = (event) => {\n//         // Ensure only numbers are entered\n//         const value = event.target.value.replace(/\\D/g, \"\");\n//         setNumber(value);\n//     };\n\n//     return (\n//         <div className=\"container\">\n//             <h1 className=\"title\">HTTP Request</h1>\n//             <button className=\"btn\" onClick={getPosts}>\n//                 Get posts\n//             </button>\n//             <input\n//                 type=\"text\"\n//                 value={number}\n//                 onChange={handleChange}\n//                 placeholder=\"Enter a number\"\n//             />\n//             {console.log(data.id)}\n\n//             {/* todo implement a condition that makes sense instead of data.id */}\n//             {data.id && (\n//                 <ul>\n//                     cheese: {data.name}, colour: {data.colour}, Total Price: $\n//                     {(data.pricePerKg * number) / 1000}, img:\n//                     {imageExists && (\n//                         <img src={\"/\" + data.name + \".png\"} alt=\"xdd\"></img>\n//                     )}\n//                 </ul>\n//             )}\n//         </div>\n//     );\n// }\n\n// export default App;\n\n// Filename - App.js\nimport \"./App.css\";\n\n// Example of a data array that\n// you might receive from an API\nconst data = [\n    { name: \"Anom\", age: 19, gender: \"Male\" },\n    { name: \"Megha\", age: 19, gender: \"Female\" },\n    { name: \"Subham\", age: 25, gender: \"Male\" },\n];\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <table>\n                <tr>\n                    <th>Name</th>\n                    <th>Age</th>\n                    <th>Gender</th>\n                </tr>\n                {data.map((val, key) => {\n                    return (\n                        <tr key={key}>\n                            <td>{val.name}</td>\n                            <td>{val.age}</td>\n                            <td>{val.gender}</td>\n                        </tr>\n                    );\n                })}\n            </table>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":";AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,OAAO,WAAW;;AAElB;AACA;AAAA,SAAAA,MAAA,IAAAC,OAAA;AACA,MAAMC,IAAI,GAAG,CACT;EAAEC,IAAI,EAAE,MAAM;EAAEC,GAAG,EAAE,EAAE;EAAEC,MAAM,EAAE;AAAO,CAAC,EACzC;EAAEF,IAAI,EAAE,OAAO;EAAEC,GAAG,EAAE,EAAE;EAAEC,MAAM,EAAE;AAAS,CAAC,EAC5C;EAAEF,IAAI,EAAE,QAAQ;EAAEC,GAAG,EAAE,EAAE;EAAEC,MAAM,EAAE;AAAO,CAAC,CAC9C;AAED,SAASC,GAAGA,CAAA,EAAG;EACX,oBACIL,OAAA;IAAKM,SAAS,EAAC,KAAK;IAAAC,QAAA,eAChBP,OAAA;MAAAO,QAAA,gBACIP,OAAA;QAAAO,QAAA,gBACIP,OAAA;UAAAO,QAAA,EAAI;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACbX,OAAA;UAAAO,QAAA,EAAI;QAAG;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACZX,OAAA;UAAAO,QAAA,EAAI;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACf,CAAC,EACJV,IAAI,CAACW,GAAG,CAAC,CAACC,GAAG,EAAEC,GAAG,KAAK;QACpB,oBACId,OAAA;UAAAO,QAAA,gBACIP,OAAA;YAAAO,QAAA,EAAKM,GAAG,CAACX;UAAI;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACnBX,OAAA;YAAAO,QAAA,EAAKM,GAAG,CAACV;UAAG;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAClBX,OAAA;YAAAO,QAAA,EAAKM,GAAG,CAACT;UAAM;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA,GAHhBG,GAAG;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIR,CAAC;MAEb,CAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEd;AAACI,EAAA,GArBQV,GAAG;AAuBZ,eAAeA,GAAG;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}