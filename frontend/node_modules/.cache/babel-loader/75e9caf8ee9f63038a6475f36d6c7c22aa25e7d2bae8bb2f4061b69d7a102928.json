{"ast":null,"code":"var _jsxFileName = \"/home/team7lmao/repos/react_http/src/App.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import \"./main.css\";\n// import \"./App.css\";\n// // const images = require.context(\"../public\", true);\n\n// function App() {\n//     const [data, setData] = useState([]);\n//     const [number, setNumber] = useState(\"\");\n//     const [imageExists, setImageExists] = useState(true);\n//     // todo: implement a function that reads the public folder and checks if the image exists\n//     const staticFileList = [\"cheese\", \"cheese2\", \"cheese3\"]; // Define your static list of files here\n\n//     function getPosts() {\n//         fetch(\n//             \"https://localhost:7089/breakfasts/a07898b0-fffa-439c-944e-216893ddec8e\"\n//         )\n//             .then((response) => response.json())\n//             .then((json) => setData(json));\n\n//         if (data.name && staticFileList.includes(data.name)) {\n//             // todo: checkImageExists(data.imgUrl);\n//             console.log(\"xdd\");\n//             setImageExists(true);\n//         } else {\n//             setImageExists(false);\n//             console.log(\"xdd2\");\n//         }\n//     }\n\n//     const handleChange = (event) => {\n//         // Ensure only numbers are entered\n//         const value = event.target.value.replace(/\\D/g, \"\");\n//         setNumber(value);\n//     };\n\n//     return (\n//         <div className=\"container\">\n//             <h1 className=\"title\">HTTP Request</h1>\n//             <button className=\"btn\" onClick={getPosts}>\n//                 Get posts\n//             </button>\n//             <input\n//                 type=\"text\"\n//                 value={number}\n//                 onChange={handleChange}\n//                 placeholder=\"Enter a number\"\n//             />\n//             {console.log(data.id)}\n\n//             {/* todo implement a condition that makes sense instead of data.id */}\n//             {data.id && (\n//                 <ul>\n//                     cheese: {data.name}, colour: {data.colour}, Total Price: $\n//                     {(data.pricePerKg * number) / 1000}, img:\n//                     {imageExists && (\n//                         <img src={\"/\" + data.name + \".png\"} alt=\"xdd\"></img>\n//                     )}\n//                 </ul>\n//             )}\n//         </div>\n//     );\n// }\n\n// export default App;\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [data, setData] = useState([]);\n  handleClick = () => {\n    const breakfastData = {\n      name: \"cheese\",\n      colour: \"yellow\",\n      pricePerKg: 10.0,\n      imgUrl: \"www\"\n    };\n    fetch(\"http://localhost:5141/breakfasts\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(breakfastData)\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      } else {\n        console.log(\"great success >:)\");\n      }\n      // Do something if the request is successful\n    }).catch(error => {\n      console.error(\"There was a problem with your fetch operation:\", error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: this.handleClick,\n    children: \"Send Request\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 12\n  }, this);\n}\n_s(App, \"hhQqYsxLIv1exGOzUvDGOVv6fXw=\");\n_c = App;\nexport default YourComponent;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","data","setData","handleClick","breakfastData","name","colour","pricePerKg","imgUrl","fetch","method","headers","body","JSON","stringify","then","response","ok","Error","console","log","catch","error","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","YourComponent","$RefreshReg$"],"sources":["/home/team7lmao/repos/react_http/src/App.js"],"sourcesContent":["// import React, { useState } from \"react\";\n// import \"./main.css\";\n// import \"./App.css\";\n// // const images = require.context(\"../public\", true);\n\n// function App() {\n//     const [data, setData] = useState([]);\n//     const [number, setNumber] = useState(\"\");\n//     const [imageExists, setImageExists] = useState(true);\n//     // todo: implement a function that reads the public folder and checks if the image exists\n//     const staticFileList = [\"cheese\", \"cheese2\", \"cheese3\"]; // Define your static list of files here\n\n//     function getPosts() {\n//         fetch(\n//             \"https://localhost:7089/breakfasts/a07898b0-fffa-439c-944e-216893ddec8e\"\n//         )\n//             .then((response) => response.json())\n//             .then((json) => setData(json));\n\n//         if (data.name && staticFileList.includes(data.name)) {\n//             // todo: checkImageExists(data.imgUrl);\n//             console.log(\"xdd\");\n//             setImageExists(true);\n//         } else {\n//             setImageExists(false);\n//             console.log(\"xdd2\");\n//         }\n//     }\n\n//     const handleChange = (event) => {\n//         // Ensure only numbers are entered\n//         const value = event.target.value.replace(/\\D/g, \"\");\n//         setNumber(value);\n//     };\n\n//     return (\n//         <div className=\"container\">\n//             <h1 className=\"title\">HTTP Request</h1>\n//             <button className=\"btn\" onClick={getPosts}>\n//                 Get posts\n//             </button>\n//             <input\n//                 type=\"text\"\n//                 value={number}\n//                 onChange={handleChange}\n//                 placeholder=\"Enter a number\"\n//             />\n//             {console.log(data.id)}\n\n//             {/* todo implement a condition that makes sense instead of data.id */}\n//             {data.id && (\n//                 <ul>\n//                     cheese: {data.name}, colour: {data.colour}, Total Price: $\n//                     {(data.pricePerKg * number) / 1000}, img:\n//                     {imageExists && (\n//                         <img src={\"/\" + data.name + \".png\"} alt=\"xdd\"></img>\n//                     )}\n//                 </ul>\n//             )}\n//         </div>\n//     );\n// }\n\n// export default App;\n\nimport React, { useState } from \"react\";\n\nfunction App() {\n    const [data, setData] = useState([]);\n\n    handleClick = () => {\n        const breakfastData = {\n            name: \"cheese\",\n            colour: \"yellow\",\n            pricePerKg: 10.0,\n            imgUrl: \"www\",\n        };\n\n        fetch(\"http://localhost:5141/breakfasts\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(breakfastData),\n        })\n            .then((response) => {\n                if (!response.ok) {\n                    throw new Error(\"Network response was not ok\");\n                } else {\n                    console.log(\"great success >:)\");\n                }\n                // Do something if the request is successful\n            })\n            .catch((error) => {\n                console.error(\n                    \"There was a problem with your fetch operation:\",\n                    error\n                );\n            });\n    };\n\n    return <button onClick={this.handleClick}>Send Request</button>;\n}\n\nexport default YourComponent;\n"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAEpCO,WAAW,GAAGA,CAAA,KAAM;IAChB,MAAMC,aAAa,GAAG;MAClBC,IAAI,EAAE,QAAQ;MACdC,MAAM,EAAE,QAAQ;MAChBC,UAAU,EAAE,IAAI;MAChBC,MAAM,EAAE;IACZ,CAAC;IAEDC,KAAK,CAAC,kCAAkC,EAAE;MACtCC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACV,aAAa;IACtC,CAAC,CAAC,CACGW,IAAI,CAAEC,QAAQ,IAAK;MAChB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAClD,CAAC,MAAM;QACHC,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;MACpC;MACA;IACJ,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MACdH,OAAO,CAACG,KAAK,CACT,gDAAgD,EAChDA,KACJ,CAAC;IACL,CAAC,CAAC;EACV,CAAC;EAED,oBAAOxB,OAAA;IAAQyB,OAAO,EAAE,IAAI,CAACpB,WAAY;IAAAqB,QAAA,EAAC;EAAY;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AACnE;AAAC5B,EAAA,CAnCQD,GAAG;AAAA8B,EAAA,GAAH9B,GAAG;AAqCZ,eAAe+B,aAAa;AAAC,IAAAD,EAAA;AAAAE,YAAA,CAAAF,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}